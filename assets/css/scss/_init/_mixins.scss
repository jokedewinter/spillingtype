
// ----------------------------------------------------------
// Rem output with px fallback
// Going with plain pixel values for the $size setting
// ----------------------------------------------------------

@mixin font-size($size: 16) {
	font-size: $size * 1px;
	font-size: ($size / 10) * 1rem;
}

// ----------------------------------------------------------
// General 
// ----------------------------------------------------------

@mixin no-bullets() {
	padding: 0;

	li { list-style: none; }
	li::before {
    content: "\200B";
    display: block;
    height: 0;
  } // add zero-width space
  a { border-bottom: none; }
}


// ----------------------------------------------------------
// Background shade 
// ----------------------------------------------------------

@mixin background-shade($colour: var(--col-page-light)) {
    content: "";
    position: absolute;
    top: 0;
    left: 50%;
    right: 50%;
    width: 100vw;
    height: 100%;
    margin: 0 -50vw;
    display: block;
    z-index: 10;
    background-color: $colour;
}

// ----------------------------------------------------------
// Grid 
// ----------------------------------------------------------

@mixin gridauto() {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 45%));
    grid-column-gap: var(--base);
    grid-auto-flow: row dense;
}

@mixin gridfixed($cols) {
    display: grid;
    grid-template-columns: repeat($cols, 1fr);
    grid-column-gap: var(--base);
}


// ----------------------------------------------------------
// Placeholder styles
// ----------------------------------------------------------

@mixin placeholder-style() {
    @include font-size(16); 
    font-style: italic; 
    color: var(--col-border);
}


// ----------------------------------------------------------
// Putting little vertical stripes between list items
// ----------------------------------------------------------

@mixin list-with-stripes() {

    display: inline-block;

	:after {
		content: "|";
		float: right;
		padding: 0 0.5em;
		color: var(--col-text-light);
	}

	&:last-of-type :after { content: ""; }
}


// ----------------------------------------------------------
// Fancy CSS things
// ----------------------------------------------------------

@mixin text-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.9)) {
	text-shadow: $string;
}

@mixin border-radius($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin border-radiuses($topleft: 0, $topright: 0, $bottomright: 0, $bottomleft: 0) {
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	-webkit-border-top-left-radius: $topleft;

	-moz-border-radius-topright: $topright;
	-moz-border-radius-bottomright: $bottomright;
	-moz-border-radius-bottomleft: $bottomleft;
	-moz-border-radius-topleft: $topleft;

	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
	border-top-left-radius: $topleft;
}

@mixin box-shadow ($string) {
	-webkit-box-shadow: $string;
	-moz-box-shadow: $string;
	box-shadow: $string;
}

@mixin columns($count: 3, $gap: 10) {
	-webkit-column-count: $count;
	-moz-column-count: $count;
	column-count: $count;
	
  	-webkit-column-gap: $gap;
	-moz-column-gap: $gap;
	column-gap: $gap;
}

// Use this on the elements inside the column container element
@mixin columns-break() {
	-webkit-column-break-inside: avoid;
	page-break-inside: avoid;
	break-inside: avoid;
}

@mixin transition ($property, $duration, $timing) {
	-webkit-transition-property: $property;  
	-moz-transition-property: $property;
	-ms-transition-property: $property; 
	-o-transition-property: $property;  
	transition-property: $property;  

	-webkit-transition-duration: 	$duration;  
	-moz-transition-duration: $duration;
	-ms-transition-duration: $duration; 
	-o-transition-duration: $duration;  
	transition-duration: $duration;  

	-webkit-transition-timing-function: $timing;  
	-moz-transition-timing-function: $timing;
	-ms-transition-timing-function: $timing; 
	-o-transition-timing-function: $timing;  
	transition-timing-function: $timing;  
}
